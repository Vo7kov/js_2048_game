{"version":3,"sources":["scripts/main.js"],"names":["newState","button","document","querySelector","messageStart","messageLose","messageWin","field","scoreField","state","isWin","score","fieldMatrix","children","map","row","buttonHandler","classList","contains","remove","add","innerText","toggle","addTile","render","findEmptyCell","y","x","randomNumber","emptyCells","forEach","rowIndex","cell","columnIndex","push","Math","floor","random","length","elem","move","e","key","left","right","down","up","i","j","isPosibleToMove","checkRows","newRow","filter","index","splice","concat","Array","fill","reverseRows","reverse","transposeState","_","colIndex","checkColumns","some","addEventListener"],"mappings":"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","file":"main.1c62ba30.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\r\n\r\nconst button = document.querySelector('button');\r\n\r\nconst messageStart = document.querySelector('.message-start');\r\nconst messageLose = document.querySelector('.message-lose');\r\nconst messageWin = document.querySelector('.message-win');\r\nconst field = document.querySelector('tbody');\r\nconst scoreField = document.querySelector('.game-score');\r\n\r\nlet state = [\r\n  [0, 0, 0, 0],\r\n  [0, 0, 0, 0],\r\n  [0, 0, 0, 0],\r\n  [0, 0, 0, 0],\r\n];\r\n\r\nlet newState;\r\nlet isWin = false;\r\nlet score = 0;\r\nconst fieldMatrix = [...field.children].map(row => [...row.children]);\r\n\r\nbutton.addEventListener('click', buttonHandler);\r\ndocument.addEventListener('keydown', move);\r\n\r\nfunction buttonHandler() {\r\n  if (button.classList.contains('start')) {\r\n    button.classList.remove('start');\r\n    button.classList.add('restart');\r\n    button.innerText = 'Restart';\r\n    messageStart.classList.add('hidden');\r\n  } else {\r\n    state = [\r\n      [0, 0, 0, 0],\r\n      [0, 0, 0, 0],\r\n      [0, 0, 0, 0],\r\n      [0, 0, 0, 0],\r\n    ];\r\n\r\n    score = 0;\r\n    messageLose.classList.toggle('hidden', true);\r\n    messageWin.classList.toggle('hidden', true);\r\n  }\r\n\r\n  addTile();\r\n  addTile();\r\n  render();\r\n}\r\n\r\nfunction addTile() {\r\n  const [y, x] = findEmptyCell();\r\n\r\n  state[y][x] = randomNumber();\r\n}\r\n\r\nfunction findEmptyCell() {\r\n  const emptyCells = [];\r\n\r\n  state.forEach((row, rowIndex) => {\r\n    row.forEach((cell, columnIndex) => {\r\n      if (cell === 0) {\r\n        emptyCells.push([rowIndex, columnIndex]);\r\n      }\r\n    });\r\n  });\r\n\r\n  return emptyCells[Math.floor(Math.random() * emptyCells.length)];\r\n}\r\n\r\nfunction randomNumber() {\r\n  return Math.random() >= 0.9 ? 4 : 2;\r\n}\r\n\r\nfunction render() {\r\n  state.forEach((row, rowIndex) => {\r\n    row.forEach((cell, columnIndex) => {\r\n      const elem = fieldMatrix[rowIndex][columnIndex];\r\n\r\n      elem.classList = 'field-cell';\r\n\r\n      if (cell === 0) {\r\n        elem.innerText = '';\r\n      } else {\r\n        elem.innerText = cell;\r\n        elem.classList.add(`field-cell--${cell}`);\r\n      }\r\n    });\r\n  });\r\n\r\n  scoreField.innerText = score;\r\n}\r\n\r\nfunction move(e) {\r\n  newState = state;\r\n\r\n  switch (e.key) {\r\n    case 'ArrowLeft':\r\n      left();\r\n      break;\r\n\r\n    case 'ArrowRight':\r\n      right();\r\n      break;\r\n\r\n    case 'ArrowDown':\r\n      down();\r\n      break;\r\n\r\n    case 'ArrowUp':\r\n      up();\r\n      break;\r\n\r\n    default:\r\n      return;\r\n  }\r\n\r\n  for (let i = 0; i < 4; i++) {\r\n    for (let j = 0; j < 4; j++) {\r\n      if (newState[i][j] !== state[i][j]) {\r\n        state = newState;\r\n        addTile();\r\n        render();\r\n\r\n        if (isWin) {\r\n          messageWin.classList.remove('hidden');\r\n\r\n          return;\r\n        }\r\n\r\n        if (!isPosibleToMove()) {\r\n          messageLose.classList.remove('hidden');\r\n        }\r\n\r\n        return;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction left() {\r\n  if (!checkRows()) {\r\n    return;\r\n  }\r\n\r\n  newState = newState.map(row => {\r\n    const newRow = row.filter(cell => cell !== 0);\r\n\r\n    newRow.forEach((cell, index) => {\r\n      if (cell === newRow[index + 1]) {\r\n        newRow[index] *= 2;\r\n        newRow.splice(index + 1, 1);\r\n        score += newRow[index];\r\n\r\n        if (newRow[index] === 2048) {\r\n          isWin = true;\r\n        }\r\n      }\r\n    });\r\n\r\n    return newRow.concat(Array(4 - newRow.length).fill(0));\r\n  });\r\n}\r\n\r\nfunction reverseRows() {\r\n  newState.forEach(row => row.reverse());\r\n}\r\n\r\nfunction right() {\r\n  if (!checkRows()) {\r\n    return;\r\n  }\r\n\r\n  reverseRows();\r\n  left();\r\n  reverseRows();\r\n}\r\n\r\nfunction transposeState() {\r\n  newState = newState[0]\r\n    .map((_, colIndex) => newState.map(row => row[colIndex]));\r\n}\r\n\r\nfunction up() {\r\n  transposeState();\r\n  left();\r\n  transposeState();\r\n}\r\n\r\nfunction down() {\r\n  transposeState();\r\n  right();\r\n  transposeState();\r\n}\r\n\r\nfunction isPosibleToMove() {\r\n  if (checkRows()) {\r\n    return true;\r\n  }\r\n\r\n  transposeState();\r\n\r\n  return checkColumns();\r\n}\r\n\r\nfunction checkRows() {\r\n  for (let i = 0; i < 4; i++) {\r\n    if (newState[i].some(cell => cell === 0)\r\n      || newState[i].some((cell, j) => cell === newState[i][j + 1])) {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  return false;\r\n}\r\n\r\nfunction checkColumns() {\r\n  for (let i = 0; i < 4; i++) {\r\n    if (newState[i].some((cell, j) => cell === newState[i][j + 1])) {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  return false;\r\n}\r\n"]}